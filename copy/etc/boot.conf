#!/bin/sh
#
# NAME
#
#   boot.conf
#
# DESCRIPTION
#
#   Default Grub boot parameter definitions. These values provide assumed
#   defaults for Grub boot parameters if they are not provided by the user
#   before system initialization.
#
# AUTHOR
#
#   Originally written by Michael Spencer.
#   Maintained by the Wren project developers.
#
#
# The Wren project; Copyright 2013-2015 the Wren project developers.
# See the COPYRIGHT file in the top-level directory of this distribution
# for individual attributions.
#
# This file is part of the Wren project. It is subject to the license terms
# in the LICENSE file found in the top-level directory of this distribution.
# No part of the Wren project, including this file, may be copied, modified,
# propagated, or distributed except according to the terms contained in the
# LICENSE file.
#
# This program comes with ABSOLUTELY NO WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# LICENSE file found in the top-level directory of this distribution for
# more details.
#

# If BOOT_TEST_MODE is enabled, commands will be logged as the system is
# initialized and, regardless of whether initialization succeeds, will drop
# into initramfs once initialization has completed.
BOOT_TEST_MODE=0

# The BOOT_SKIP_* states determine whether particular images are sought and
# subsequently loaded during system initialization. If a BOOT_SKIP_* state is
# enabled, the associated image will NOT be loaded.
BOOT_SKIP_ROOT=0
BOOT_SKIP_PLATFORM=0
BOOT_SKIP_SAVE=0

# The BOOT_*_TO_RAM states determine whether particular images will be copied
# into RAM during the initialization process. If a BOOT_*_TO_RAM state is
# enabled, its associated image (or the image's content) will be copied into
# RAM, otherwise it will be directly mounted via a loop device.
BOOT_ROOT_TO_RAM=0
BOOT_PLATFORM_TO_RAM=0
BOOT_SAVE_TO_RAM=1

# The BOOT_UNMOUNT state, if enabled, automatically enables all BOOT_*_TO_RAM
# states. If BOOT_UNMOUNT is enabled and all of the BOOT_*_TO_RAM states also
# remain enabled, then the physical boot device will be unmounted prior to
# completion of initialization and the user will be prompted to remove the boot
# media before operating system boots.
BOOT_UNMOUNT=0

# The BOOT_SAVE state defines the device-user-specific save name to use in
# determining a save directory path. It is not defined by default, as a platform
# default already exists. BOOT_SAVE, if defined, overrides the platform default
# and allows a specific save to be loaded during initialization. In almost all
# cases, it is best to leave this value undefined here so that the value can be
# defined by either the user or platform during initialization.
BOOT_SAVE=

# The BOOT_SWAP state is used to set a swap-formatted device or image file path
# to be used by the system (and its tmpfs file systems) as swap space. This may
# be desirable on low-RAM systems or for applications that require more RAM than
# the target system is expected to have available. BOOT_SWAP is empty by default
# and should generally be left empty here unless there is a known constant swap
# media available on the target system. If BOOT_SWAP is being defined as a
# physical device (an external hard disk for example), the path string should
# be prefixed with "LABEL=" or "UUID=" (without quotes) as is appropriate.
# The BOOT_SWAP_TIME state defines how long to wait (in seconds) for the
# BOOT_SWAP device to become available after it is enabled. BOOT_SWAP_TIME is
# particularly important when using any of the BOOT_*_TO_RAM options, as the
# extra swap space may be required to store larger images.
BOOT_SWAP=
BOOT_SWAP_WAIT=10

# The BOOT_NO_ACTIVE_FS option, if enabled, skips the creation of a separate
# active file system image all together, instead falling back to storing active
# data directly in the tmpfs mount. Note that this will make it impossible to
# use snapshots during the save process.
BOOT_NO_ACTIVE_FS=0
